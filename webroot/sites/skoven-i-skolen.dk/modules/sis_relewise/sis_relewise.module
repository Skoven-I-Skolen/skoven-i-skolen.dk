<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\EntityReferenceFieldItemList;
use Drupal\node\Entity\Node;
use Drupal\relewise\DataTypes\Search\Sorting\Content\ContentPopularitySorting;

/**
 * Implements hook_locale_translation_projects_alter().
 */
function sis_relewise_locale_translation_projects_alter(&$projects) {
  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
  $module_handler = \Drupal::service('module_handler');
  $path = $module_handler->getModule('sis_relewise')->getPath();
  $projects['sis_relewise']['info']['interface translation server pattern']
    = $path . '/translations/%language.po';
}

/**
 * Relewise content alter.
 *
 * @param \Drupal\relewise\Content $content
 */
function sis_relewise_relewise_content_alter(\Drupal\relewise\Content &$content, EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node') {
    /** @var Node $node */
    $node = $entity;
    $langcode = $entity->language()->getId();

    if ($node->hasField('body') && !$node->get('body')
        ->isEmpty()) {
      $content->addData('body', new \Drupal\relewise\DataTypes\Multilingual($node->get('body')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_description') && !$node->get('field_description')
        ->isEmpty()) {
      $content->addData('field_description', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_description')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_article_type') && !$node->get('field_article_type')
        ->isEmpty()) {
      $content->addData('field_article_type', $node->get('field_article_type')
        ->first()
        ->getValue()['target_id']);
      $tid = $node->get('field_article_type')
        ->first()
        ->getValue()['target_id'];
      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
      if ($term) {
        $content->addData('field_article_type_label', $term->label());
      }
    }
    if ($node->hasField('field_subject') && !$node->get('field_subject')
        ->isEmpty()) {
      $content->addData('field_subject', $node->get('field_subject')
        ->first()
        ->getValue()['target_id']);
    }
    if ($node->hasField('field_class') && !$node->get('field_class')
        ->isEmpty()) {
      $content->addData('field_class', $node->get('field_class')
        ->first()
        ->getValue()['target_id']);
    }
    if ($node->hasField('field_location') && !$node->get('field_location')
        ->isEmpty()) {
      $content->addData('field_location', _sis_relewise_relewise_taxonomy_value($node->get('field_location')));
    }
    if ($node->hasField('field_season') && !$node->get('field_season')
        ->isEmpty()) {
      $content->addData('field_season', _sis_relewise_relewise_taxonomy_value($node->get('field_season')));
    }
    if ($node->hasField('field_equipment') && !$node->get('field_equipment')
        ->isEmpty()) {
      $content->addData('field_equipment', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_equipment')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_colophon') && !$node->get('field_colophon')
        ->isEmpty()) {
      $content->addData('field_colophon', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_colophon')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_colophon_author') && !$node->get('field_colophon_author')
        ->isEmpty()) {
      $content->addData('field_colophon_author', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_colophon_author')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_colophon_photographer') && !$node->get('field_colophon_photographer')
        ->isEmpty()) {
      $content->addData('field_colophon_photographer', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_colophon_photographer')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($node->hasField('field_teaching_goals') && !$node->get('field_teaching_goals')
        ->isEmpty()) {
      $content->addData('field_teaching_goals', new \Drupal\relewise\DataTypes\Multilingual($node->get('field_teaching_goals')
        ->first()
        ->getValue()['value'], $langcode));
    }
  }
  elseif ($entity->getEntityTypeId() == 'profile') {
    /** @var \Drupal\profile\Entity\Profile $profile */
    $profile = $entity;
    $langcode = $entity->language()->getId();

    if ($profile->hasField('field_organization_description') && !$profile->get('field_organization_description')
        ->isEmpty()) {
      $content->addData('field_description', new \Drupal\relewise\DataTypes\Multilingual($profile->get('field_organization_description')
        ->first()
        ->getValue()['value'], $langcode));
    }
    if ($profile->hasField('field_organization_address') && !$profile->get('field_organization_address')
        ->isEmpty()) {
      $content->addData('field_organization_address', $profile->get('field_organization_address')->first()->getValue()['organization'] ?? '');
    }
  }
  else {
    $content = NULL;
  }
  //$content = null;
  return $content;
}

/**
 * @param \Drupal\Core\Field\EntityReferenceFieldItemList $field
 *
 * @return \Drupal\relewise\DataTypes\StringList
 */
function _sis_relewise_relewise_taxonomy_value(EntityReferenceFieldItemList $field): \Drupal\relewise\DataTypes\StringList {
  $terms = $field->referencedEntities();
  $value = new \Drupal\relewise\DataTypes\StringList([]);
  /** @var \Drupal\taxonomy\Entity\Term $term */
  foreach ($terms as $term) {
    $value->addValue($term->id());
  }
  return $value;
}

/**
 * Implements hook_theme().
 */
function sis_relewise_theme($existing, $type, $theme, $path) {
  return [
    'sis_relewise_most_popular' => [
      'variables' => [],
    ],
  ];
}

/**
 * Most popular content preprocess.
 *
 * @param array $variables
 *   Template variables.
 */
function sis_relewise_preprocess_sis_relewise_most_popular(array &$variables) {
  $variables['cache']['max-age'] = 60*60*24;
  /** @var \Drupal\relewise\Relewise $relewise */
  $relewise = \Drupal::service('relewise');
  try {
    $result = $relewise->searchContent('', ['bundle' => ['article']], new ContentPopularitySorting(), 4);
    $nodes = $relewise->getSearchedContent($result);
  } catch (Exception $exception) {
    $nodes = [];
  }
  if (!empty($nodes)) {
    $variables['nodes'] = \Drupal::entityTypeManager()
      ->getViewBuilder('node')
      ->viewMultiple($nodes, 'teaser');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sis_relewise_form_entity_overview_search_page_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['most_popular'] = [
    '#theme' => 'sis_relewise_most_popular'
  ];

  $form['keyword'] = [
    '#markup' => $form_state->get(['fields', 'text'])
  ];
}
