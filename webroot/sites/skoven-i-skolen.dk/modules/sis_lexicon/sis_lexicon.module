<?php

use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_locale_translation_projects_alter().
 *
 * @param $projects
 *   List of all projects
 */
function sis_lexicon_locale_translation_projects_alter(&$projects) {
  $module_handler = \Drupal::service('module_handler');
  $path = $module_handler->getModule('sis_lexicon')->getPath();
  $projects['sis_lexicon']['info']['interface translation server pattern'] = $path . '/translations/%language.po';
}

/**
 * Implements hook_theme()
 */
function sis_lexicon_theme() {
  return [
    'lexicon' => [
      'variables' => [
        'articles' => [],
        'letter' => NULL,
        'pager' => FALSE,
        'count' => 0,
        'max_count' => 0
      ]
    ],
    'lexicon_filters' => [
      'base hook' => 'item_list'
    ],
    'lexicon_search' => [
      'variables' => ['articles' => []]
    ]
  ];
}

/**
 * Implements preprocess_HOOK
 *
 * @param $variables
 *   The variables to alter
 */
function sis_lexicon_preprocess_block__inline_block__lexicon_teaser(&$variables) {
  /** @var \Drupal\sis_lexicon\Services\LexiconContentDeliveryService $lexiconContentDeliveryService */
  $lexiconContentDeliveryService = Drupal::service('sis_lexicon.content_delivery');
  $variables['filters'] = $lexiconContentDeliveryService->getFilters(2);

  $initialLetter = $variables['content']['#block_content']
    ->get('field_lexicon_initial_letter')->value;
  if ($initialLetter !== NULL) {
    $variables['articles'] = $lexiconContentDeliveryService->getArticles($initialLetter);
  }
  $variables['articles']['#letter'] = NULL;
}

/**
 * @param $variables
 *
 * @return void
 */
function sis_lexicon_preprocess_lexicon(&$variables) {
  if ($variables['pager']) {
    $variables['pager'] = (bool) ($variables['count'] < $variables['max_count']);
  }
}

/**
 * Implements hook_entity_view().
 */
function sis_lexicon_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode == 'full' && $entity->getEntityTypeId() == 'taxonomy_term') {
    /** @var \Drupal\taxonomy\Entity\Term $term */
    $term = $entity;
    if ($term->getName() == 'Leksikon') {
      $url = atom_view('lexicon-main-page')->toValue();
      if ($url) {
        $redirect = new RedirectResponse($url->toString());
        $redirect->send();
      }
    }
  }
}
