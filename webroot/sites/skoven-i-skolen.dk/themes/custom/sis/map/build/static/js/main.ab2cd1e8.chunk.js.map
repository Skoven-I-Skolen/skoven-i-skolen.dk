{"version":3,"sources":["MeasurementDetails.js","Flensborg Fjord.xlsx","Horsens Fjord.xlsx","Limfjorden.xlsx","Mariager Fjord (Dybet).xlsx","Odense Fjord.xlsx","Ã˜resund.xlsx","Map.js","App.js","index.js"],"names":["MeasurementDetails","setModalVisible","measurements","table","cancel","simple","depth","datafiles","title","location","simpleMeasurements","ui","Object","values","sort","a","b","sortorder","visible","onCancel","style","zIndex","mask","centered","width","footer","type","onClick","locale","filterTitle","filterConfirm","filterReset","filterEmptyText","selectAll","selectInvert","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","emptyText","size","columns","dataIndex","align","render","record","toFixed","replace","dataSource","rowKey","e","id","pagination","hideOnSinglePage","showSizeChanger","children","key","scroll","y","href","file","target","marginRight","marginBottom","useBreakpoint","Grid","Map","useState","zoom","setZoom","center","setCenter","shouldAnimate","setShouldAnimate","markers","setMarkers","simpleMarkers","setSimpleMarkers","depthMarkers","setDepthMarkers","dataMarkers","setDataMarkers","setTable","basicIsActive","setBasicIsActive","depthIsActive","setDepthIsActive","datafilesIsActive","setDatafilesIsActive","tooltip","setTooltip","loading","setLoading","modalVisible","activeMeasurements","setActiveMeasurements","screens","mapWidth","md","mapHeight","fetchMeasurements","fetch","response","text","samplesRes","JSON","parse","depthMeasurements","completeDataSets","manageSimpleSamples","mapLocation","latitude","substr","longitude","placeName","element","name","season","result","param","unit","manageDepthSamples","console","log","Number","isInteger","manageCompleteDataSets","dataFileFlensborgFjord","dataFileLimfjorden","dataFileOdenseFjord","dataFileHorsensFjord","dataFileMariagerFjord","dataFileOeresund","forEach","depthType","depthMeasurement","useEffect","handleClick","measurementType","scaleFactor","setScaleFactor","className","justify","xs","lg","sm","height","backgroundColor","position","right","top","textAlign","fontSize","from","to","config","slow","styles","projection","projectionConfig","rotate","scale","border","borderRadius","onMove","k","maxZoom","translateExtent","onMoveEnd","coordinates","onMoveStart","geography","require","geographies","map","geo","strokeWidth","default","fill","outline","hover","pressed","properties","cartodb_id","i","r","stroke","cursor","onMouseEnter","onMouseLeave","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab2cd1e8.chunk.js","sourcesContent":["import { Modal, Table, Button } from \"antd\";\n\nconst MeasurementDetails = ({ setModalVisible, measurements, table }) => {\n  const cancel = () => {\n    setModalVisible(false);\n  }\n\n  let simple = false;\n  let depth = false;\n  let datafiles = false;\n  let title = '';\n\n  if (table === 'depth') {\n    depth = true;\n    title = `Springlagsdata for ${measurements.location}`;\n  } else if (table === 'simple') {\n    simple = true;\n    title = `Basisdata for ${measurements.location}`;\n  } else {\n    datafiles = true;\n    title = `Komplet datasÃ¦t for ${measurements.location}`;\n  }\n\n  let simpleMeasurements = [];\n  // komplet datasÃ¦t har ikke en \"ui\" key. Derfor opdeling i data med og uden.\n  if (measurements.ui) {\n    simpleMeasurements = [...Object.values(measurements.ui)];\n\n    if ( simple === true ) {\n      simpleMeasurements.sort((a, b) => a.sortorder - b.sortorder);\n    }\n  } else {\n    simpleMeasurements = [...Object.values(measurements)];\n  }\n\n  return (\n    <Modal\n      visible={true}\n      onCancel={() => cancel()}\n      style={{ zIndex: 99999 }}\n      mask={false}\n      title={title}\n      centered\n      width={800}\n      footer={[\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={() => cancel()}\n        >\n          Luk\n        </Button>,\n      ]}\n    >\n\n      {simple && (\n        <Table\n          locale={{\n            filterTitle: \"Filter menu\",\n            filterConfirm: \"OK\",\n            filterReset: \"Nulstil\",\n            filterEmptyText: \"Ingen filtre\",\n            selectAll: \"VÃ¦lg nuvÃ¦rende side\",\n            selectInvert: \"InvertÃ©r nuvÃ¦rende side\",\n            selectionAll: \"VÃ¦lg alt data\",\n            sortTitle: \"SortÃ©r\",\n            expand: \"Udvid rÃ¦kke\",\n            collapse: \"Kollaps rÃ¦kke\",\n            triggerDesc: \"SortÃ©r faldende\",\n            triggerAsc: \"Sorter stigende\",\n            cancelSort: \"AnnullÃ©r sortering\",\n            emptyText: \"Ingen mÃ¥linger\",\n          }}\n          size=\"small\"\n          columns={[\n            {\n              title: \"Parameter\",\n              dataIndex: [\"param\"],\n              // sorter: (a, b) => a.parameter.localeCompare(b.unit.name),\n            },\n            {\n              title: \"Enhed\",\n              dataIndex: [\"unit\"],\n              // sorter: (a, b) => a.parameter.localeCompare(b.unit.name),\n            },\n            {\n              title: \"Sommer\",\n              dataIndex: \"Sommer\",\n              align: 'right',\n              // toFixed og toLocaleString er begge funktioner som tager et nummer og spytter en streng ud. \n              // Derfor er benyttet parseFloat for at fÃ¥ toFixed resultatet tilbage til et nummer, som toLocaleString sÃ¥ kan arbejde videre med.\n              // Ã…rsag er at vi bÃ¥de gerne vil have afrundet samtidig med at vi skÃ¦rer ned til 1 decimal. OG vi vil have udskiftet decimaladskiller fra punktum til komma.\n              // Hvis man vil skÃ¦re decimaler vÃ¦k i en streng bliver det svÃ¦rt at afrunde. \n              // Hvis man med regular expression (eller str.replace) vil skifte decimal- og tusindadskiller ud er det muligvis nemt (fra en til da : f.eks. ved at fjerne alle kommaer (tusindadskillere) og erstatte punktum(decimaladskiller) med komma )\n              // Hvis man Ã¸nsker altid at vise 1 decimal, ogsÃ¥ nÃ¥r det er 0, kan man lade vÃ¦re med at bruge parseFloat og sÃ¥ bruge en regular expression som forklaret lige ovenfor\n              // 14-10-2022 - Der er udtrykt Ã¸nske om altid at vise en decimal og derfor er parseFloat droppet\n              // Har valgt at satse pÃ¥ at tallene ingen tusindadskiller indeholder Og at de har et punktum som decimaladskiller. Derfor kan vi blot bruge str.replace. \n              // render: (record) => record > 0 ? `${parseFloat(record.toFixed(1)).toLocaleString('da-DA')}` : '',\n              render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n              // sorter: (a, b) => a.depth - b.depth,\n            },\n            {\n              title: \"Vinter\",\n              dataIndex: \"Vinter\",\n              align: 'right',\n              render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n              // sorter: (a, b) => a.result - b.result,\n              // render: (record) => `${record.result} ${record.unit}`,\n            },\n          ]}\n          dataSource={simpleMeasurements}\n          rowKey={(e) => e.id}\n          pagination={{\n            hideOnSinglePage: true,\n            size: \"default\",\n            showSizeChanger: false\n          }}\n        />\n      )}\n      {depth && (\n        <Table\n          locale={{\n            filterTitle: \"Filter menu\",\n            filterConfirm: \"OK\",\n            filterReset: \"Nulstil\",\n            filterEmptyText: \"Ingen filtre\",\n            selectAll: \"VÃ¦lg nuvÃ¦rende side\",\n            selectInvert: \"InvertÃ©r nuvÃ¦rende side\",\n            selectionAll: \"VÃ¦lg alt data\",\n            sortTitle: \"SortÃ©r\",\n            expand: \"Udvid rÃ¦kke\",\n            collapse: \"Kollaps rÃ¦kke\",\n            triggerDesc: \"SortÃ©r faldende\",\n            triggerAsc: \"Sorter stigende\",\n            cancelSort: \"AnnullÃ©r sortering\",\n            emptyText: \"Ingen mÃ¥linger\",\n          }}\n          size=\"middle\"\n          columns={[\n            {\n              title: \"Dybde (Meter)\",\n              dataIndex: [\"depth\"],\n              // sorter: (a, b) => a.parameter.localeCompare(b.unit.name),\n            },\n            {\n              title: \"Temperatur (Grader C)\",\n              children: [\n                {\n                  title: 'Sommer',\n                  dataIndex: 'Temperatur_sommer',\n                  key: 'building',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                },\n                {\n                  title: 'Vinter',\n                  dataIndex: 'Temperatur_vinter',\n                  key: 'number',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                }\n              ]\n            },\n            {\n              title: \"Salt (Promille)\",\n              children: [\n                {\n                  title: 'Sommer',\n                  dataIndex: 'Salinitet_sommer',\n                  key: 'building',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                },\n                {\n                  title: 'Vinter',\n                  dataIndex: 'Salinitet_vinter',\n                  key: 'number',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                }\n              ]\n            },\n            {\n              title: \"Ilt (mg/l)\",\n              children: [\n                {\n                  title: 'Sommer',\n                  dataIndex: 'Oxygen indhold_sommer',\n                  key: 'building',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                },\n                {\n                  title: 'Vinter',\n                  dataIndex: 'Oxygen indhold_vinter',\n                  key: 'number',\n                  width: 100,\n                  align: 'right',\n                  render: (record) => record > 0 ? `${record.toFixed(1).replace('.', ',')}` : record === 0 ? '0,0' : '',\n                }\n              ]\n            },\n          ]}\n          dataSource={simpleMeasurements}\n          rowKey={(e) => e.id}\n          pagination={false}\n          scroll={{ y: 500 }}\n        // pagination={{\n        //   hideOnSinglePage: true,\n        //   size: \"default\",\n        //   showSizeChanger: false\n        // }}\n        />\n      )}\n\n      {datafiles && (\n        <Button\n          href={measurements.file}\n          target=\"_blank\"\n          // icon={<FilePdfOutlined />}\n          size=\"large\"\n          style={{ marginRight: 10, marginBottom: 10 }}\n        >\n          Download datasÃ¦t\n        </Button>\n      )}\n\n    </Modal>\n  );\n};\n\nexport default MeasurementDetails;\n","export default __webpack_public_path__ + \"static/media/Flensborg Fjord.43be04dc.xlsx\";","export default __webpack_public_path__ + \"static/media/Horsens Fjord.b769157b.xlsx\";","export default __webpack_public_path__ + \"static/media/Limfjorden.654b30cd.xlsx\";","export default __webpack_public_path__ + \"static/media/Mariager Fjord (Dybet).9446b02d.xlsx\";","export default __webpack_public_path__ + \"static/media/Odense Fjord.d9279076.xlsx\";","export default __webpack_public_path__ + \"static/media/Ã˜resund.af32106a.xlsx\";","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Divider, Grid, Spin, Button, message } from \"antd\";\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker,\n\n} from \"react-simple-maps\";\nimport { Spring, config } from \"react-spring/renderprops\";\nimport ReactTooltip from \"react-tooltip\";\nimport MeasurementDetails from \"./MeasurementDetails\";\nimport { ExceptionMap } from \"antd/lib/result\";\n\nimport dataFileFlensborgFjord from \"./Flensborg Fjord.xlsx\";\nimport dataFileHorsensFjord from \"./Horsens Fjord.xlsx\";\nimport dataFileLimfjorden from \"./Limfjorden.xlsx\";\nimport dataFileMariagerFjord from \"./Mariager Fjord (Dybet).xlsx\";\nimport dataFileOdenseFjord from \"./Odense Fjord.xlsx\";\nimport dataFileOeresund from \"./Ã˜resund.xlsx\";\n\n\nconst { useBreakpoint } = Grid;\n\nconst Map = () => {\n  const [zoom, setZoom] = useState(1);\n  const [center, setCenter] = useState([11.8, 56.15]);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n\n  const [markers, setMarkers] = useState([]);\n  const [simpleMarkers, setSimpleMarkers] = useState([]);\n  const [depthMarkers, setDepthMarkers] = useState([]);\n  const [dataMarkers, setDataMarkers] = useState([]);\n\n  const [table, setTable] = useState('simple');\n  const [basicIsActive, setBasicIsActive] = useState(true);\n  const [depthIsActive, setDepthIsActive] = useState(false);\n  const [datafilesIsActive, setDatafilesIsActive] = useState(false);\n\n\n  const [tooltip, setTooltip] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [activeMeasurements, setActiveMeasurements] = useState(null);\n  const screens = useBreakpoint();\n  const mapWidth = screens.md ? 800 : 600;\n  const mapHeight = screens.md ? 600 : 800;\n\n  /**\n   * Henter data og arrangerer disse i objekter \"measurements\", som hver isÃ¦r samler mÃ¥linger fra identiske geografiske positioner.\n   * Hver position/measurement har fÃ¸lgende attributter :\n   * oplysninger om positionen, type (f.eks. \"sample\") OG et nyt objekt som indeholder dato og resultat for seneste mÃ¥linger af de forskellige stoftyper (ex: oxygen, ammounium, nitrate, phosphor)\n   * Desuden er de rÃ¥ data fra dataudtrÃ¦kket/servicekaldet ogsÃ¥ tilfÃ¸jet under key: \"raw\" (disse indeholder jo positionen og resultatet, sÃ¥ det er mÃ¥ske overflÃ¸digt at gentage dem som egne attributter)\n   *\n   * @returns array af markers - som er en array af measurements OG partners\n   */\n  const fetchMeasurements = async () => {\n    setLoading(true);\n\n    const response = await fetch('/sites/skoven-i-skolen.dk/themes/custom/sis/map/build/hih.txt');\n    let samplesRes = await response.text();\n    samplesRes = JSON.parse(samplesRes);\n\n    // Vi har tÃ¦nkt os at omorganisere de rÃ¥ samples\n    let measurements = {};\n    let simpleMeasurements = {};\n    let depthMeasurements = {};\n    let completeDataSets = {};\n\n    const manageSimpleSamples = (e, measurements) => {\n      /**\n       * Vi skal have en array som ser nogenlunde sÃ¥ledes ud.\n       * Dette for at tilfredsstille <table> fra ant design, som\n       * anvendes til visning af mÃ¥lingerne. Og selvfÃ¸lgelig for at\n       * vi kan vise data pÃ¥ den Ã¸nskede mÃ¥de.\n       * Kravet er en array bestÃ¥ende af objekter.\n       * Eet objekt pr rÃ¦kke i tabellen.\n       * Hvert objekt indeholder key value par for hver detalje, der Ã¸nskes vist,\n       *\n       * Simple samples bestÃ¥r af 2 mÃ¥linger for hver stofparameter.\n       * En mÃ¥ling for sÃ¦son sommer og en for vinter.\n       * Visning i GUI skal bestÃ¥ af een linje for hver stofparameter.\n       * Og kolonnerne er \"stofparameter\", \"sommer\", \"vinter\".\n       *\n       * {\n       *    \"54.9977,10.1604\" : {\n       *      type: \"sample\",\n       *      latitude: 54.9977,\n       *      longitude: 10.1604,\n       *      location: \"Sydlige LillebÃ¦lt\",\n       *      ui: {\n       *        \"Nitrit+nitrat-N\": {\n       *            Sommer: 1.5,\n       *            Vinter: 71,\n       *            param: \"KvÃ¦lstof\",\n       *            sortorder: 4,\n       *            unit: \"Âµg/l\"\n       *        },\n       *         \"Oxygen indhold\": {\n       *            Sommer: 8.729999542236328,\n       *            Vinter: 3.3299999237060547,\n       *            param: \"Temperatur\",\n       *            sortorder: 1,\n       *            unit: \"grader C\"\n       *         },\n       *          ......\n       *      }\n       *    }\n       *    \"54.8374,9.8245\" : {\n       *      .....\n       *    }\n       * }\n       */\n      // Der oprettes en key bestÃ¥ende af lÃ¦ngde. og breddegrad\n      // Bruges til at samle mÃ¥linger fra samme geografiske position\n      let key =\n        e.mapLocation.latitude +\n        \"\".substr(0, 6) +\n        \",\" +\n        e.mapLocation.longitude +\n        \"\".substr(0, 6);\n\n      // Hvis ny position\n      if (!measurements[key]) {\n        measurements[key] = {\n          type: \"sample\",\n          latitude: e.mapLocation.latitude,\n          longitude: e.mapLocation.longitude,\n          location: e.mapLocation.placeName,\n        };\n      }\n\n\n      if (!measurements[key].ui) {\n        measurements[key].ui = {};\n      }\n      if (!measurements[key].ui[e.element.name]) {\n        measurements[key].ui[e.element.name] = {};\n      }\n\n      //else {\n      measurements[key].ui[e.element.name][e.season] = e.result;\n\n      switch (e.element.name) {\n        case 'Salinitet':\n          measurements[key].ui[e.element.name].param = 'Salt'\n          measurements[key].ui[e.element.name].sortorder = 2\n          break;\n        case 'Temperatur':\n          measurements[key].ui[e.element.name].param = 'Temperatur'\n          measurements[key].ui[e.element.name].sortorder = 1\n          break;\n        case 'Phosphor, total-P':\n          measurements[key].ui[e.element.name].param = 'Fosfor'\n          measurements[key].ui[e.element.name].sortorder = 5\n          break;\n        case 'Oxygen indhold':\n          measurements[key].ui[e.element.name].param = 'Ilt'\n          measurements[key].ui[e.element.name].sortorder = 3\n          break;\n        case 'Nitrit+nitrat-N':\n          measurements[key].ui[e.element.name].param = 'KvÃ¦lstof'\n          measurements[key].ui[e.element.name].sortorder = 4\n          break;\n        default:\n          measurements[key].ui[e.element.name].param = e.element.name\n      };\n\n      measurements[key].ui[e.element.name].unit = e.unit;\n\n    }\n\n    const manageDepthSamples = (e, measurements) => {\n\n      // Der oprettes en key bestÃ¥ende af lÃ¦ngde. og breddegrad\n      // Bruges til at samle mÃ¥linger fra samme geografiske position\n      let key =\n        e.mapLocation.latitude +\n        \"\".substr(0, 6) +\n        \",\" +\n        e.mapLocation.longitude +\n        \"\".substr(0, 6);\n\n      // Hvis ny position\n      if (!measurements[key]) {\n        console.log(e)\n        measurements[key] = {\n          type: \"sample\",\n          latitude: e.mapLocation.latitude,\n          longitude: e.mapLocation.longitude,\n          location: e.mapLocation.placeName,\n        };\n      }\n\n      if (!measurements[key].ui) {\n        measurements[key].ui = {};\n      }\n\n      if (Number.isInteger(e.depth)) {\n\n        if (!measurements[key].ui[e.depth]) {\n          measurements[key].ui[e.depth] = {};\n        }\n\n        measurements[key].ui[e.depth].depth = e.depth;\n\n        if (e.season === \"Sommer\") {\n          measurements[key].ui[e.depth][e.element.name + '_sommer'] = e.result;\n        } else if (e.season === \"Vinter\") {\n          measurements[key].ui[e.depth][e.element.name + '_vinter'] = e.result;\n        }\n      }\n\n    }\n\n    const manageCompleteDataSets = () => {\n      completeDataSets = {\n        1: {\n          location: 'Flensborg Fjord',\n          latitude: 54.837367,\n          longitude: 9.8245,\n          type: 'dataset',\n          file: dataFileFlensborgFjord\n        },\n        2: {\n          location: 'Limfjorden',\n          latitude: 56.954,\n          longitude: 9.0625,\n          type: 'dataset',\n          file: dataFileLimfjorden\n        },\n        3: {\n          location: 'Odense Fjord',\n          latitude: 55.479167,\n          longitude: 10.519167,\n          type: 'dataset',\n          file: dataFileOdenseFjord\n        },\n        4: {\n          location: 'Horsens Fjord',\n          latitude: 55.844383,\n          longitude: 10.0254,\n          type: 'dataset',\n          file: dataFileHorsensFjord\n        },\n        5: {\n          location: 'Mariager Fjord',\n          latitude: 56.662667,\n          longitude: 9.973667,\n          type: 'dataset',\n          file: dataFileMariagerFjord\n        },\n        6: {\n          location: 'Ã˜resund',\n          latitude: 55,\n          longitude: 13.3,\n          type: 'dataset',\n          file: dataFileOeresund\n        },\n      }\n    }\n\n\n    if (samplesRes) {\n      samplesRes.forEach((e) => {\n\n\n        /**\n         * Vi har brug for at filtrere i basisdata (simple) og springlagsdata (depthmeasurements) og sÃ¥ alle mÃ¥linger, som vi jo har i forvejen.\n         * Det kan ske ved at oprette en array for hvert filter.\n         * Dvs vi her i starten af loopet tester om samplesRes indeholder 'x' i depthType.depthMeasurement eller depthType.simple eller begge.\n         * AfhÃ¦ngig af depthType type pusher vi mÃ¥lingen i en array: measurements['all'], measurements['simple'], measurements['depth'].\n         * Det er dog ikke helt sÃ¥ simpelt mÃ¥ske ? skal det vÃ¦re et objekt eller en array ?\n         *\n         * Efter tildeling i en type array, skal der egentlig fortsÃ¦ttes som fÃ¸r.\n         * Derfor kan vi prÃ¸ve at udskille den kode til egen funktion.\n         *\n         * Resultatet skal gerne blive 3 arrays eller objekter. Een for hvert filter.\n         * I disse er sÃ¥ den opdeling i koordinater mv som hidtil er blevet anvendt.\n         *\n         * Lokationer kan indeholde mÃ¥linger som er begge typer. Men det er ikke noget problem. Den mÃ¥ling kommer blot med i begge filtre.\n         * I det ene filter er denne mÃ¥ling en simpel. I det andet er den en dybdemÃ¥ling.\n         *\n         * Der skal tages hÃ¸jde for (hvis det ikke allerede sker) at en lokation kan vÃ¦re tom for mÃ¥linger af en type, f.eks. \"simple\",\n         * og at dette punkt sÃ¥ ikke skal vises pÃ¥ kortet, nÃ¥r der er klikket pÃ¥ \"Basisdata\".\n         */\n\n        if (e.depthType.simple !== \"\") {\n          manageSimpleSamples(e, simpleMeasurements);\n        }\n\n        if (e.depthType.depthMeasurement !== \"\") {\n          manageDepthSamples(e, depthMeasurements);\n        }\n      });\n\n\n    }\n\n    manageCompleteDataSets();\n\n\n    // measurements indlÃ¦ses i vores lokale state, sÃ¥ de er tilbÃ¦ngelige udenfor funktionen.\n    // lÃ¦g mÃ¦rke til at measurements key (altsÃ¥ den der angiver geografiske position) smides vÃ¦k\n    // og objekt values for hver key indlÃ¦ses i en array.\n    // SÃ¥ markers er altsÃ¥ en array bestÃ¥ende af objekter som hver isÃ¦r indeholder data (andre objekter) for hver geografiske position.\n    // markers er den, som anvendes ved klik pÃ¥ en af filterknapperne. Det fremgÃ¥r af handleClick nedenfor\n    setMarkers([...Object.values(simpleMeasurements)]);\n    setSimpleMarkers([...Object.values(simpleMeasurements)]);\n    setDepthMarkers([...Object.values(depthMeasurements)]);\n    setDataMarkers([...Object.values(completeDataSets)]);\n\n       setLoading(false);\n  };\n\n  // KÃ¸rer KUN een gang - ved indlÃ¦sning af siden.\n  useEffect(() => {\n    fetchMeasurements();\n  }, []);\n\n\n  const handleClick = (measurementType) => {\n    if (measurementType === 'basic') {\n      setMarkers(simpleMarkers);\n      setTable('simple');\n      setBasicIsActive(true);\n      setDepthIsActive(false);\n      setDatafilesIsActive(false);\n    } else if (measurementType === 'depth') {\n      setMarkers(depthMarkers);\n      setTable('depth');\n      setBasicIsActive(false);\n      setDepthIsActive(true);\n      setDatafilesIsActive(false);\n    } else {\n      setMarkers(dataMarkers);\n      setTable('datafiles');\n      setBasicIsActive(false);\n      setDepthIsActive(false);\n      setDatafilesIsActive(true);\n    }\n\n  }\n\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  return (\n    <>\n      <div className=\"drawer\">\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n\n            {/* knapperne \"Basisdata\", \"Springlagsdata\" og \"Komplet datasÃ¦t\"  */}\n            <div id=\"\" style={{ width: screens.sm ? \"160px\" : \"120px\", height: 130, backgroundColor: '', position: 'absolute', right: 20, top: 20 }}>\n              <div>\n                <div>\n                  <fieldset>\n                    <Button\n                      onClick={() => { handleClick('basic') }}\n                      target=\"_blank\"\n                      size={screens.sm ? \"large\" : \"medium\"}\n                      style={{ marginRight: 10, marginBottom: 5, width: screens.sm ? \"160px\" : \"120px\", textAlign: \"left\", backgroundColor: basicIsActive ? '#EEE' : '#EEFFFF', fontSize: screens.sm ? '' : '0.8em' }}\n                    >\n                      Basisdata\n                    </Button>\n                    <Button\n                      onClick={() => { handleClick('depth') }}\n                      target=\"_blank\"\n                      size={screens.sm ? \"large\" : \"medium\"}\n                      style={{ marginRight: 10, marginBottom: 5, width: screens.sm ? \"160px\" : \"120px\", textAlign: \"left\", backgroundColor: depthIsActive ? '#EEE' : '#EEFFFF', fontSize: screens.sm ? '' : '0.8em' }}\n                    >\n                      Springlagsdata\n                    </Button>\n                    <Button\n                      onClick={() => { handleClick('data') }}\n                      target=\"_blank\"\n                      size= {screens.sm ? \"large\" : \"medium\"}\n                      style={{ marginRight: 10, marginBottom: 10, width: screens.sm ? \"160px\" : \"120px\", textAlign: \"left\", backgroundColor: datafilesIsActive ? '#EEE' : '#EEFFFF', fontSize: screens.sm ? '' : '0.8em' }}\n                    >\n                      Komplet datasÃ¦t\n                    </Button>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n\n            <Spring\n              from={{ zoom: 1, center: [11.8, 56.15] }}\n              to={{ zoom: zoom, center: center }}\n              config={config.slow}\n            >\n              {(styles) => (\n                <ComposableMap\n                  projection=\"geoAzimuthalEqualArea\"\n                  width={mapWidth}\n                  height={mapHeight}\n                  projectionConfig={{\n                    rotate: [-11.8, -56.15, 0],\n                    scale: screens.md ? 10500 : 8000,\n                  }}\n                  data-tip=\"\"\n                  style={{\n                    backgroundColor: \"rgb(255, 255, 255)\",\n                    border: \"1px solid #d9d9d9\",\n                    borderRadius: 2,\n                  }}\n                >\n                  <ZoomableGroup\n                    // onMove og scaleFactor gÃ¸r det muligt at \"lÃ¥se\" stÃ¸rrelsen pÃ¥ punkterne pÃ¥ kortet nÃ¥r der zoomes.\n                    onMove={({ k }) => setScaleFactor(k)}\n                    zoom={shouldAnimate ? styles.zoom : zoom}\n                    maxZoom={20}\n                    center={shouldAnimate ? styles.center : center}\n                    translateExtent={[\n                      screens.md ? [0, 0] : [-200, -200],\n                      screens.md\n                        ? [mapWidth, mapHeight]\n                        : [mapWidth + 200, mapHeight + 200],\n                    ]}\n                    onMoveEnd={(e) => {\n                      setCenter(e.coordinates);\n                      setZoom(e.zoom);\n                    }}\n                    onMoveStart={() => setShouldAnimate(false)}\n                  >\n                    <Geographies\n                      geography={require(\"./denmark-municipalities.json\")}\n                    >\n                      {({ geographies }) =>\n                        geographies.map((geo) => (\n                          <Geography\n                            geography={geo}\n                            key={geo.properties.cartodb_id}\n                            strokeWidth=\".5px\"\n                            style={{\n                              default: {\n                                fill: loading ? \"#999\" : \"#333\",\n                                outline: \"none\",\n                              },\n                              hover: {\n                                fill: \"#333\",\n                                outline: \"none\",\n                              },\n                              pressed: {\n                                fill: \"#333\",\n                                outline: \"none\",\n                              },\n                            }}\n                          />\n                        ))\n                      }\n                    </Geographies>\n                    {markers.map((e, i) =>\n                      e.type === \"sample\" ? (\n                        <Marker key={i} coordinates={[e.longitude, e.latitude]}>\n                          <circle\n                            // ved mobilstÃ¸rrelse skÃ¦rm skal punkterne skalere. division med scalefactor gÃ¸r at de holder stÃ¸rrelsen\n                            r={screens.sm ? 5 / scaleFactor : 5}\n                            fill=\"#FFF\"\n                            stroke=\"#06F\"\n                            // ved mobilstÃ¸rrelse skÃ¦rm skal punkterne skalere.\n                            strokeWidth={screens.sm ? 2.5 / scaleFactor : 2.5}\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => {\n                              setActiveMeasurements(e);\n                              setModalVisible(true);\n                            }}\n                          onMouseEnter={() => {\n                            setTooltip(e);\n                          }}\n                          onMouseLeave={() => setTooltip(null)}\n                          />\n                        </Marker>\n                      ) : e.latitude ? (\n                        <Marker key={i} coordinates={[e.longitude, e.latitude]}>\n                          <circle onClick={() => {\n                            setActiveMeasurements(e);\n                            setModalVisible(true);\n                          }}\n                            style={{ cursor: \"pointer\" }}\n                            r={screens.sm ? 5 / scaleFactor : 5}\n                            fill=\"#FFF\"\n                            stroke=\"#06F\"\n                            strokeWidth={screens.sm ? 2.5 / scaleFactor : 2.5}\n                          onMouseEnter={() => {\n                            setTooltip(e);\n                          }}\n                          onMouseLeave={() => setTooltip(null)}\n                          />\n                        </Marker>\n                      ) : null\n                    )}\n                  </ZoomableGroup>\n                </ComposableMap>\n              )}\n            </Spring>\n            {loading && (\n              <Row\n                justify=\"center\"\n                style={{\n                  position: \"absolute\",\n                  top: mapHeight / 2,\n                  width: \"100%\",\n                }}\n              >\n                <Spin size=\"large\" />\n              </Row>\n            )}\n\n            <ReactTooltip\n              backgroundColor=\"white\"\n            >\n              {tooltip ? (\n                  <>\n                    <h2\n                      style={{ width: \"100%\", textAlign: \"center\" }}\n                    >{tooltip.location}</h2>\n\n                  </>\n                ) : null}\n            </ReactTooltip>\n          </Col>\n        </Row>\n      </div>\n\n      {modalVisible && (\n        <MeasurementDetails\n          setModalVisible={setModalVisible}\n          measurements={activeMeasurements}\n          table={table}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Map;\n","// import logo from './logo.svg';\nimport './App.css';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}