{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}

{{ attach_library('sis/news-page') }}
{% if node.field_section_bg_graphics.value %}
  {{ attach_library('sis/section-bg-graphics') }}
{% endif %}

{% set classes = [
  'news-page',
  node.field_section_bg_graphics.value ? 'section--background-graphics' : '',
] %}

<article{{ attributes.addClass(classes) }}>
  {% if node.field_section_bg_graphics.value %}
    <img src="/{{ directory }}/dist/images/{{ node.field_section_bg_graphics.value }}.svg" class="section-bg-graphics__image section-bg-graphics__image--{{ node.field_section_bg_graphics.value }} section-bg-graphics__position--{{ node.field_section_bg_graphics_pos.value }}" />
  {% endif %}
  <div class="container">
    <div class="row">
      <div class="col-xs-12 col-md-8 col-lg-7">
        <div{{ content_attributes }}>
          <div class="news-page__date">
            {{ node.created.value|format_date('news_date') }}
          </div>
          {% if node.field_header[0] %}
            {% include '@reusable-component/page-title.twig' with {
              'attributes': create_attribute().addClass('article-page__title'),
              'title': label,
            } %}
          {% else %}
            {% include '@reusable-component/page-title.twig' with {
              'attributes': create_attribute().addClass('article-page__title'),
              'title': content.title,
            } %}
          {% endif %}
          <div class="news-page__description">
            {{ node.body.summary }}
          </div>
          <div class="news-page__image">
            {{ content.field_news_image }}
          </div>
          <div class="news-page__content">
            {{ content|without(['field_list_date', 'field_header', 'title', 'field_news_image', 'field_description']) }}
          </div>
        </div>
      </div>
      <div class="col-xs-12 col-md-4 col-lg-4 col-lg-offset-1">
<div class="print-button">
	<a href="#" onclick="window.print()">
		{% include '@reusable-component/svg-icon.twig' with {
              'attributes': '',
              'svgIconName': 'printer'
            } %}
		<span class="print-button__text">Print</span>
	</a>
</div>

        {% if node.field_factboxes.value %}
          {% for factboxe in node.field_factboxes %}
            <div class="facts-box">
              <div class="facts-box__title">
                {{ factboxe.entity.field_factbox_title.value }}
              </div>
              <div class="facts-box__content">
                {% if factboxe.entity.field_factbox_subtitle.value %}
                  <div class="facts-box__content-item">
                    <div class="facts-box__content-item-label">
                      {{ factboxe.entity.field_factbox_subtitle.value }}
                    </div>
                    <div class="facts-box__content-item-value">
                      {{ factboxe.entity.field_factbox_content.value|t }}
                    </div>
                  </div>
                {% else %}
                  {{ factboxe.entity.field_factbox_content.value|t }}
                {% endif %}
              </div>
            </div>
          {% endfor %}
        {% endif %}
        {% if inspirations %}
          <div class="facts-box">
            <div class="facts-box__title">
              Inspiration og lignende materialer
            </div>
            <div class="facts-box__content facts-box__inspiration">
              {{ inspirations }}
            </div>
          </div>
        {% endif %}
      </div>
    </div>
    {% if latest %}
      <div class="news-page__latest section section--spacing-bottom-none">
        <div class="row">
          <div class="col-xs-12 col-sm-8 col-md-8">
            <div class="news-page__latest-header">
              <h3>{{ 'Latest news'|t }}</h3>
            </div>
          </div>
          <div class="col-xs-12 col-sm-4 col-md-4">
            <div class="swiper-navigation">
              <div class="swiper-pagination-wrapper">
                <div class="swiper-pagination-title"> Viser:</div>
                <div class="swiper-pagination"></div>
              </div>
              <div class="swiper-button-prev"></div>
              <div class="swiper-button-next"></div>
            </div>
          </div>
          <div class="col-xs-12">
            <div class="news-page__latest-items js-news-page__latest-items swiper">
              <div class="swiper-wrapper">
                {{ latest }}
              </div>
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</article>
